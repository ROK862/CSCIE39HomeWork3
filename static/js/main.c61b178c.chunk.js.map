{"version":3,"sources":["components/Panel/Panel.js","components/Button/Button.js","MediaButtons/MediaButtons.js","components/Input/Input.js","LoginForm/LoginForm.js","Pager/Pager.js","RadioButtons/RadioButtons.js","App.js","index.js"],"names":["Panel","className","this","props","cName","children","Component","Button","icon","text","width","onClick","iconElement","MediaButtons","btnClass","panelClassName","pClass","backgroundColor","color","size","Input","type","onChange","objType","objClass","placeholder","LoginForm","usrname","passw","getInput","e","target","value","username","v","password","swal","title","buttons","dangerMode","then","willDelete","Pager","pages","index","offset","widthPx","pagesInt","parseInt","numbers","Array","keys","pageOfset","getButton","current","btClass","disabled","buttonClickHandler","console","log","getButtonList","skipPages","map","number","diff","posDiff","length","buttonList","getPagerButtons","RadioButtons","components","compArr","radioButtons","comp","id","Math","random","push","forEach","elId","document","getElementById","parentElement","style","guiChangeHandler","name","checked","App","ReactDOM","render","StrictMode"],"mappings":"6WAYeA,E,4JATb,WAAU,IACAC,EAAcC,KAAKC,MAAnBF,UAEFG,EAASH,GAAyB,eAExC,OAAO,qBAAKA,UAAWG,EAAhB,SAAwBF,KAAKC,MAAME,e,GAN1BC,a,OCaLC,G,kKAVb,WAAU,IAAD,EAC2CL,KAAKC,MAA/CK,EADD,EACCA,KAAMC,EADP,EACOA,KAAMC,EADb,EACaA,MAAOT,EADpB,EACoBA,UAAWU,EAD/B,EAC+BA,QAEhCC,EAAeJ,EAAkB,SAATA,EAAmB,cAAC,IAAD,IAAoB,cAAC,IAAD,IAAqB,GAG1F,OAAO,yBAAQE,MAAOA,EAAOC,QAASA,EAASV,UAAWA,EAAnD,UAAgEW,EAAhE,IAA8EH,S,GAPpEH,cCmBNO,G,kKAjBb,WACE,IAAMC,EAAW,eACTC,EAAmBb,KAAKC,MAAxBY,eAEFC,EAAUD,GAAmC,eAEnD,OACE,eAAC,EAAD,CAAOE,gBAAgB,OAAOhB,UAAWe,EAAzC,UACE,cAAC,EAAD,CAAQP,KAAK,SAASR,UAAWa,EAAUH,QAAS,eACpD,cAAC,EAAD,CAAQF,KAAK,eAAeR,UAAWa,EAAUH,QAAS,eAC1D,cAAC,EAAD,CAAQF,KAAK,OAAOR,UAAWa,EAAUH,QAAS,aAAUO,MAAM,QAAQC,KAAK,UAC/E,cAAC,EAAD,CAAQV,KAAK,OAAOR,UAAWa,EAAUH,QAAS,aAAUO,MAAM,MAAMC,KAAK,iB,GAZ1Db,cCaZc,E,4JAfb,WAAU,IAAD,EAEmClB,KAAKC,MAAxCkB,EAFA,EAEAA,KAAMZ,EAFN,EAEMA,KAAMR,EAFZ,EAEYA,UAAWqB,EAFvB,EAEuBA,SACxBC,EAAWF,GAAe,OAC1BG,EAAYvB,GAAyB,gBAE3C,OACE,8BACE,uBAAOwB,YAAahB,EAAMY,KAAME,EAAStB,UAAWuB,EAAUF,SAAUA,U,GAT5DhB,a,gBCuDLoB,G,kKAhDb,WACE,IACIC,EAAU,GAAIC,EAAQ,GACpBC,EAAW,SAAC,GAA8B,IAA5BP,EAA2B,EAA3BA,SAAUb,EAAiB,EAAjBA,KAAMY,EAAW,EAAXA,KAClC,OAAO,cAAC,EAAD,CAAOZ,KAAMA,EAAMY,KAAMA,EAAMC,SAAU,SAAAQ,GAAC,OAAIR,EAASQ,EAAEC,OAAOC,WA0BnEC,EAAWJ,EAAS,CAACP,SAAU,SAACY,GACpCP,EAAUO,GACTzB,KAAK,WAAYY,KAAK,SAEnBc,EAAWN,EAAS,CAACP,SAAU,SAACY,GACpCN,EAAQM,GACPzB,KAAK,WAAYY,KAAK,aAEzB,OACE,eAAC,EAAD,CAAOJ,gBAAgB,OAAvB,UACGgB,EACAE,EACD,cAAC,EAAD,CAAQ1B,KAAK,QAAQY,KAAK,SAASpB,UAzCtB,eAyC2CU,QAAS,WAlCnD,KAAZgB,GAA4B,KAAVC,EACpBQ,IAAK,YAAa,iEAAkE,WAEpFA,IAAK,CACHC,MAAO,iBACP5B,KAAM,gDACND,KAAM,UACN8B,SAAS,EACTC,YAAY,IAEbC,MAAK,SAACC,GACDA,EACFL,IAAK,oBAAqB,CACxB5B,KAAM,YAGR4B,IAAK,eAkB6ElB,MAAM,QAAQC,KAAK,iB,GA3CzFb,c,QC4DToC,G,kKA/Db,WAAU,IAAD,EACiCxC,KAAKC,MAArCwC,EADD,EACCA,MAAOC,EADR,EACQA,MAAOlC,EADf,EACeA,MAAOmC,EADtB,EACsBA,OACvBC,EAAWpC,EAAD,UAAaA,EAAb,MAAyB,OACnCqC,EAAWC,SAASL,GACpBM,EAAO,YAAOC,MAAMH,GAAUI,QAC9BC,EAAaP,EAAUG,SAASH,GAAU,EAC1C/B,EAAW,eAGXuC,EAAY,SAAC,GAA4D,IAA1D1C,EAAyD,EAAzDA,QAAS2C,EAAgD,EAAhDA,QAASR,EAAuC,EAAvCA,QAASS,EAA8B,EAA9BA,QAAS9C,EAAqB,EAArBA,KAAM+C,EAAe,EAAfA,SAC7D,OAAO,cAAC,EAAD,CAAQ7C,QAAS,SAAAmB,GAAC,OAAInB,EAAQ2C,IAAUV,MAAOU,EAAS5C,MAAOoC,EAASU,SAAUA,EAAUvD,UAAWsD,EAAS9C,KAAOA,GAAe6C,KAGzIG,EAAqB,SAACvB,GAC1BwB,QAAQC,IAAI,wCAGRC,EAAgB,WACpB,IAAIC,GAAY,EAEhB,OAAOZ,EAAQa,KAAI,SAACC,GAClB,IAAIT,EAAUS,EAAO,EACjBC,EAAOpB,EAAMU,EACbW,EAAWD,EAAO,GAAe,EAATA,EAAcA,EACtCT,EAAWQ,IAAWf,SAASJ,GAjBtB,uBAiB2C9B,EAGxD,OAAMmD,GAAWb,GAAeE,IAAYL,EAAQiB,OAC3Cb,EAAU,CAAE1C,QAAS,SAACmB,GAAM4B,QAAQC,IAAR,uCAA4C7B,KAAQwB,UAASR,UAASS,UAASC,SAAS,QACjHK,EAOH,MAJPA,GAAY,EACLR,EAAU,CAAE1C,QAAS,SAACmB,GAAM4B,QAAQC,IAAR,iDAAsD7B,KAAQwB,UAASR,UAASS,UAASC,SAAS,KAAM/C,KAAK,aAsBtJ,OACE,qBAAKR,UAAU,eAAf,SAdsB,SAAC2C,GACvB,IAAMuB,EAAaP,IAEnB,OACE,sBAAK3D,UAAU,sBAAf,UACE,cAAC,EAAD,CAAQS,MAAOoC,EAAS7C,UAAWa,EAAUH,QAAS8C,EAAoBhD,KAAK,GAAGD,KAAK,SACtF2D,EACD,cAAC,EAAD,CAAQzD,MAAOoC,EAAS7C,UAAWa,EAAUH,QAAS8C,EAAoBhD,KAAK,GAAGD,KAAK,aAQxF4D,S,GA1DW9D,cCyCL+D,G,kKAxCb,WAAU,IACAC,EAAepE,KAAKC,MAApBmE,WACFC,EAAU,GA4BVC,EAhBCF,EAGEA,EAAWR,KAAI,SAACW,GACtB,IAAIC,EAAqB,IAAhBC,KAAKC,SAEd,OADAL,EAAQM,KAAKH,GAEZ,sBAAKzE,UAAU,eAAf,UACE,uBAAOU,QAAS,SAAAmB,GAAC,OAjBE,SAACA,GACxByC,EAAQO,SAAQ,SAACC,GACDC,SAASC,eAAeF,GAChCG,cAAcC,MAAQ,MAE9BrD,EAAEoD,cAAcC,MAAQ,oCAYCC,CAAiBtD,EAAEC,SAASV,KAAK,QAAQgE,KAAK,SAASrD,MAAOyC,EAAMC,GAAIA,EAAIY,QAAQ,YACzG,6BAAKb,UATe,4EAkB1B,OACE,qBAAKxE,UAAU,sBAAf,SACGuE,Q,GAnCkBlE,cCyCZiF,G,kKArCb,WACE,OACE,gCACE,sBAAKtF,UAAU,gBAAf,UACE,wBAAQA,UAAU,aAAlB,+CAGA,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CAAcc,eAAe,8BAIjC,sBAAKd,UAAU,6BAAf,UACE,wBAAQA,UAAU,aAAlB,yCACA,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,SAIJ,sBAAKA,UAAU,gBAAf,UACE,wBAAQA,UAAU,aAAlB,oCACA,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CAAO0C,MAAO,GAAIE,OAAQ,EAAGD,MAAO,SAIxC,sBAAK3C,UAAU,gBAAf,UACE,wBAAQA,UAAU,aAAlB,4CACA,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CAAcqE,WAAa,CAAC,QAAQ,OAAO,wB,GA9BrChE,cCFlBkF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFV,SAASC,eAAe,W","file":"static/js/main.c61b178c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Panel extends Component {\n  render() {\n    const { className } = this.props;\n\n    const cName = (className) ? className : 'panel-wraper';\n\n    return <div className={cName}>{this.props.children}</div>;\n  }\n}\n\nexport default Panel;\n","import { Component } from 'react';\nimport { FaChevronRight, FaChevronLeft } from \"react-icons/fa\";\nimport './Button.css';\n\nclass Button extends Component {\n  render() {\n    const { icon, text, width, className, onClick } = this.props;\n\n    const iconElement = (icon) ? (icon === 'Left') ? <FaChevronLeft /> : <FaChevronRight /> : ''; \n    // const disable = (disabled) ? 'on' : 'off';\n\n    return <button width={width} onClick={onClick} className={className} >{iconElement} {text}</button>;\n  }\n}\n\nexport default Button;\n","import { Component } from 'react';\nimport Panel from 'components/Panel/Panel';\nimport Button from 'components/Button/Button';\nimport './MediaButtons.css';\n\nclass MediaButtons extends Component {\n  render() {\n    const btnClass = 'pager-button';\n    const { panelClassName } = this.props;\n\n    const pClass = (panelClassName) ? panelClassName : 'panel-wraper';\n\n    return (\n      <Panel backgroundColor=\"blue\" className={pClass}>\n        <Button text=\"Rewind\" className={btnClass} onClick={() => {}} />\n        <Button text=\"Fast Forward\" className={btnClass} onClick={() => {}} />\n        <Button text=\"Play\" className={btnClass} onClick={() => {}} color=\"green\" size=\"large\" />\n        <Button text=\"Stop\" className={btnClass} onClick={() => {}} color=\"red\" size=\"large\" />\n      </Panel>\n    );\n  }\n}\n\nexport default MediaButtons;\n","import { Component } from 'react';\n\nclass Input extends Component {\n  render() {\n\n    const {type, text, className, onChange} = this.props;\n    const objType = (type) ? type : 'text';\n    const objClass = (className) ? className : 'default-input';\n\n    return ( \n      <div>\n        <input placeholder={text} type={objType} className={objClass} onChange={onChange} />\n      </div>\n    );\n\n  }\n}\n\nexport default Input;\n","import { Component } from 'react';\nimport Panel from 'components/Panel/Panel';\nimport Input from 'components/Input/Input';\nimport Button from 'components/Button/Button';\nimport swal from 'sweetalert';\n\nimport './LoginForm.css';\n\nclass LoginForm extends Component {\n  render() {\n    const btnClass = 'login-button';\n    let usrname = \"\", passw = \"\";\n    const getInput = ({ onChange, text, type }) => {\n      return <Input text={text} type={type} onChange={e => onChange(e.target.value)} />\n    }\n\n    const loginDemo = () => {\n      if (usrname !== \"\" && passw !== \"\") {\n        swal(\"Good job!\", \"Well, let's pretend for a minute that you have been logged in!\", \"success\");\n      } else {\n        swal({\n          title: \"Invalid Login.\",\n          text: \"Please complete the login form and try again.\",\n          icon: \"warning\",\n          buttons: true,\n          dangerMode: true,\n        })\n        .then((willDelete) => {\n          if (willDelete) {\n            swal(\"Please try again!\", {\n              icon: \"success\",\n            });\n          } else {\n            swal(\"Thanks!\");\n          }\n        });\n      }\n    }\n\n    const username = getInput({onChange: (v)=>{\n      usrname = v;\n    }, text:\"username\", type:\"text\"});\n\n    const password = getInput({onChange: (v)=>{\n      passw = v;\n    }, text:\"password\", type:\"password\"});\n    \n    return (\n      <Panel backgroundColor=\"blue\">\n        {username}\n        {password}\n        <Button text=\"Login\" type='button' className={btnClass} onClick={() => {loginDemo()}} color=\"green\" size=\"large\" />\n      </Panel>\n    );\n  }\n}\n\nexport default LoginForm;\n","import { Component } from 'react';\nimport './Pager.css';\nimport Button from 'components/Button/Button';\n\nclass Pager extends Component {\n  render() {\n    const { pages, index, width, offset } = this.props;\n    const widthPx = (width) ? `${width}px` : 'auto';\n    const pagesInt = parseInt(pages);\n    const numbers = [...Array(pagesInt).keys()];\n    const pageOfset = (offset) ? parseInt(offset) : 2;\n    const btnClass = 'pager-button';\n    const selClass = 'pager-focused-button';\n    \n    const getButton = ({ onClick, current, widthPx, btClass, text, disabled }) => {\n      return <Button onClick={e => onClick(current)} index={current} width={widthPx} disabled={disabled} className={btClass} text={(text) ? text : current} />\n    }\n\n    const buttonClickHandler = (v) => {\n      console.log('onclick called from parent handler!');\n    }\n\n    const getButtonList = () => {\n      let skipPages = false;\n\n      return numbers.map((number) => {\n        let current = number+1;\n        let diff = index-current;\n        let posDiff = (diff < 0) ? (diff) * -1 : (diff);\n        let btClass = (number === parseInt(index)) ? selClass : btnClass;\n\n        // Render buttons based on thier offsit\n        if ( (posDiff <= pageOfset) || (current === numbers.length) ) {\n          return getButton({ onClick: (e)=>{ console.log(`button clicked from pager.js ${e}`);}, current, widthPx, btClass, disabled:'off' });\n        } else if (!skipPages) {\n          // return a button which represents hidden buttons.\n          // Add a button that ilustrates skipping of pages above offsit value..\n          skipPages = true;\n          return getButton({ onClick: (e)=>{ console.log(`collupsed button clicked from pager.js ${e}`);}, current, widthPx, btClass, disabled:'on', text:'...' });\n        } else {\n           // Skip everything in between (current page + page offsit) and final page.\n          return null;\n        }\n        \n      });\n    }\n    \n    const getPagerButtons = (index) => {\n      const buttonList = getButtonList();\n\n      return (\n        <div className='pager-button-wraper'>\n          <Button width={widthPx} className={btnClass} onClick={buttonClickHandler} text='' icon='Left' />\n          {buttonList}\n          <Button width={widthPx} className={btnClass} onClick={buttonClickHandler} text='' icon='Right' />\n        </div>\n      );\n    }\n    \n    \n    return (\n      <div className='pager-wraper'>\n        {getPagerButtons(index)}\n      </div>\n    );\n  }\n}\n\nexport default Pager;\n","import { Component } from 'react';\nimport './RadioButtons.css';\n\n\nclass RadioButtons extends Component {\n  render() {\n    const { components } = this.props;\n    const compArr = [];\n    \n\n    const guiChangeHandler = (e) => {\n      compArr.forEach((elId) => {\n        const _comp = document.getElementById(elId);\n        _comp.parentElement.style = '';\n      });\n      e.parentElement.style = \"background: #1193ff;color: white;\";\n    }\n\n    const getComponents = () => {\n      if (!components) return <div>Nothing to render, please add components.</div>;\n\n      \n      return components.map((comp) => {\n       let id = Math.random() * 1000; \n       compArr.push(id);\n       return ( \n        <div className='radio-button'>\n          <input onClick={e => guiChangeHandler(e.target)} type=\"radio\" name=\"sizeBy\" value={comp} id={id} checked=\"checked\" />\n          <h4>{comp}</h4>\n        </div>\n        );\n      }\n      );\n    }\n\n    const radioButtons = getComponents();\n\n    return (\n      <div className='radio-button-wraper'>\n        {radioButtons}\n      </div>\n    );\n  }\n}\n\nexport default RadioButtons;\n","import { Component } from 'react';\nimport MediaButtons from 'MediaButtons/MediaButtons';\nimport LoginForm from 'LoginForm/LoginForm';\nimport Pager from 'Pager/Pager';\nimport RadioButtons from 'RadioButtons/RadioButtons';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"App-component\">\n          <header className=\"App-header\">\n            Media Buttons Component (Example)\n          </header>\n          <div className=\"App-content\">\n            <MediaButtons panelClassName='default-panel-wraper' />\n          </div>\n        </div>\n\n        <div className=\"App-component App-green-bg\">\n          <header className=\"App-header\">Login form component (TODO)</header>\n          <div className=\"App-content\">\n            <LoginForm />\n          </div>\n        </div>\n\n        <div className=\"App-component\">\n          <header className=\"App-header\">Pager component (TODO)</header>\n          <div className=\"App-content\">\n            <Pager pages={16} offset={4} index={1} />\n          </div>\n        </div>\n\n        <div className=\"App-component\">\n          <header className=\"App-header\">Radio Buttons component (TODO)</header>\n          <div className=\"App-content\">\n            <RadioButtons components={ [\"Apple\",\"Pear\",\"Orange\"] } />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}